#/bin/csh

################################################################################
# RNN vs SD(P)RNN vs RNN+A
################################################################################

# SDRNN without weight decay
#unbuffer python rnn_attr.py -task parity -seq_len 10 -display_epoch 100 -n_hidden 10 -n_attractor_hidden 20 -training_epochs 5000 -n_replications 100 -lrate_attractor .008 -lrate_prediction .008 -lrate_wt_penalty 0. -n_attractor_steps 15 -arch tanh -noise_level 0.500 -report_best_train_performance -latent_attractor_space -batch_size 256 -n_train 256 -train_attr_weights_on_prediction | tee sdprnn_15steps_noise500.out

#unbuffer python rnn_attr.py -task parity -seq_len 10 -display_epoch 100 -n_hidden 10 -n_attractor_hidden 20 -training_epochs 5000 -n_replications 100 -lrate_attractor .008 -lrate_prediction .008 -lrate_wt_penalty 0. -n_attractor_steps 15 -arch tanh -noise_level 0.500 -report_best_train_performance -latent_attractor_space -batch_size 256 -n_train 256 | tee sdrnn_15steps_noise500.out

#unbuffer python rnn_attr.py -task parity -seq_len 10 -display_epoch 100 -n_hidden 10 -n_attractor_hidden 20 -training_epochs 5000 -n_replications 100 -lrate_attractor .008 -lrate_prediction .008 -lrate_wt_penalty 0. -n_attractor_steps 0 -arch tanh -noise_level 0.500 -report_best_train_performance -latent_attractor_space -batch_size 256 -n_train 256 | tee rnn.out

#unbuffer python rnn_attr.py -task parity -seq_len 10 -display_epoch 100 -n_hidden 10 -n_attractor_hidden 20 -training_epochs 5000 -n_replications 100 -lrate_attractor .000 -lrate_prediction .008 -lrate_wt_penalty 0. -n_attractor_steps 15 -arch tanh -noise_level 0.500 -report_best_train_performance -latent_attractor_space -batch_size 256 -n_train 256 -train_attr_weights_on_prediction | tee rnna_15steps_noise500.out

################################################################################
# VARYING NOISE SD WITH SDPRNN
################################################################################

set w = 00000
set i = 15
foreach n (125 250 375 625 750) # skipping 500
   unbuffer python rnn_attr.py -task parity -seq_len 10 -display_epoch 100 -n_hidden 10 -n_attractor_hidden 20 -training_epochs 5000 -n_replications 100 -lrate_attractor .008 -lrate_prediction .008 -lrate_wt_penalty 0.${w} -n_attractor_steps $i -arch tanh -noise_level 0.${n} -report_best_train_performance -latent_attractor_space -batch_size 256 -n_train 256 -train_attr_weights_on_prediction | tee sdprnn_${n}_${i}_p${w}.out
end


